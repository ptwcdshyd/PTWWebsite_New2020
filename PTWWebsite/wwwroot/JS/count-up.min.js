function counterUp(t) { "use strict"; this.defaults = { duration: 3e3, prepend: "", append: "%", selector: ".countup", start: 0, end: 100, intvalues: !1, interval: 100 }; var i = this; for (var e in this.upating = !1, this.intervalID = null, this.props = {}, this.defaults) void 0 !== e && (i.props[e] = i.defaults[e], t.hasOwnProperty(e) && i.props.hasOwnProperty(e) && (i.props[e] = t[e])); this.domelems = document.querySelectorAll(this.props.selector), this.elems = []; var o = {}; this.domelems.forEach(function (t) { o.obj = t; var e = parseInt(t.getAttribute("cup-start")); isNaN(e) ? o.start = i.props.start : o.start = e; var r = parseInt(t.getAttribute("cup-end")); isNaN(r) ? o.end = i.props.end : o.end = r; var n = parseInt(t.getAttribute("cup-duration")); isNaN(n) ? o.duration = i.props.duration : o.duration = n; var p = t.getAttribute("cup-prepend"); o.prepend = null == p ? i.props.prepend : p; var a = t.getAttribute("cup-append"); o.append = null == a ? i.props.append : a; var s = t.getAttribute("cup-intval"); o.intvalues = null == s ? i.props.intvalues : s, o.step = (o.end - o.start) / (o.duration / i.props.interval), o.val = o.start, i.elems.push(o), o = {} }) } counterUp.prototype.start = function () { "use strict"; var t = this; this.intervalID = setInterval(function () { t.updating || t.update() }, t.props.interval) }, counterUp.prototype.update = function () { "use strict"; var e = this.updating = !0; this.elems.forEach(function (t) { t.val += t.step, t.val < t.end ? (1 == t.intvalues ? t.obj.innerHTML = t.prepend + ("0" + Math.floor(t.val)).slice(-2).toString() + t.append : t.obj.innerHTML = t.prepend + ("0" + Math.round(100 * t.val) / 100).slice(-2).toString() + t.append, e = !1) : t.obj.innerHTML = t.prepend + ("0" + t.end).slice(-2).toString() + t.append }), 1 == e && clearInterval(this.intervalID), this.updating = !1 };